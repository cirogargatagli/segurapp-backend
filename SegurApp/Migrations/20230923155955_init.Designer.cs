// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SegurApp.Infraestructure;

#nullable disable

namespace SegurApp.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20230923155955_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SegurApp.Infraestructure.Entities.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Messages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Robo"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Sospechoso"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Alerta"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Pelea"
                        });
                });

            modelBuilder.Entity("SegurApp.Infraestructure.Entities.MessageUsers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EmisorId")
                        .HasColumnType("int");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<int>("MessageId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OccurredAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmisorId");

                    b.HasIndex("MessageId");

                    b.ToTable("MessagesUsers");
                });

            modelBuilder.Entity("SegurApp.Infraestructure.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Rol que enviará mensajes de alerta",
                            Name = "Emisor"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Rol que recibe mensajes de alerta",
                            Name = "Receptor"
                        });
                });

            modelBuilder.Entity("SegurApp.Infraestructure.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Dni")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Dni = "12345678",
                            Email = "cdamico@gmail.com",
                            FullName = "Claudio Damico",
                            Password = "123",
                            Phone = "1128341234",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 2,
                            Dni = "12345679",
                            Email = "ciroshaila@gmail.com",
                            FullName = "Ciro Gargatagli",
                            Password = "321",
                            Phone = "1125714153",
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("SegurApp.Infraestructure.Entities.MessageUsers", b =>
                {
                    b.HasOne("SegurApp.Infraestructure.Entities.User", "Emisor")
                        .WithMany("MessageUsersEmisor")
                        .HasForeignKey("EmisorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SegurApp.Infraestructure.Entities.Message", "Message")
                        .WithMany("MessageUsers")
                        .HasForeignKey("MessageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Emisor");

                    b.Navigation("Message");
                });

            modelBuilder.Entity("SegurApp.Infraestructure.Entities.User", b =>
                {
                    b.HasOne("SegurApp.Infraestructure.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("SegurApp.Infraestructure.Entities.Message", b =>
                {
                    b.Navigation("MessageUsers");
                });

            modelBuilder.Entity("SegurApp.Infraestructure.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("SegurApp.Infraestructure.Entities.User", b =>
                {
                    b.Navigation("MessageUsersEmisor");
                });
#pragma warning restore 612, 618
        }
    }
}
